# MIT License

# Copyright (c) 2023 Tang

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


name: build-openwrt
run-name:  ${{ github.workflow }}-${{ github.github.actor }}
on: 
# 每12小时运行一次
    schedule:
        - cron: '0 */12 * * *'
    workflow_call:


jobs:
 prepare:
    name: 规划编译策略&准备编译环境
    runs-on: ubuntu-lastest
    outputs:
        matrix: ${{ steps.build_stragety.outputs.matrix }}
    steps: 
     - name: 签出储存库
       uses: actions/checkout@v3

     - name: 记录开始时间
       id: start_time
       run: |
        # 设置时区为上海
        sudo timedatectl set-timezone Asia/Shanghai
        # 记录开始时间
        starttime=$(date +"%Y-%m-%d %H:%M")
        # 输出时间到UI和ENV
        echo "::set-output name=starttime::$starttime"
        echo "starttime=$starttime" >> "$GITHUB_ENV"

     - name: 确定编译流程
       id: build_stragety
       run: |
        # 读取config文件
        config_path=$GITHUB_WORKSPACE/GlobalConfig/GlobalConfig.config
        if [ -e "$file_path" ]; then
            echo "File exists."
        else
            echo "File does not exist."
        fi
        # 读取target
        target=$(grep "^target=" $GITHUB_WORKSPACE/GlobalConfig/GlobalConfig.config|sed "s/.*=//g")
        echo "target=$target" >> "$GITHUB_ENV"
        # 根据target创建矩阵
        matrix_stragety="[$target]"
        echo "matrix=$matrix" >> "$GITHUB_OUTPUT"
        
  
 build-preparation:
    runs-on: ubuntu-lastest
    needs: prepare
    strategy:
        matrix: ${{ fromJson(needs.prepare.outputs.matrix) }}
    name: Build-Prepare-${{ matrix.config }}
    steps:
      - name: 签出储存库
        uses: actions/checkout@v3
      
      - name: 安装依赖
        run: |
         sudo apt update -y
         sudo apt full-upgrade -y
         sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
         bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib \
         git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev \
         libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz \
         mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools \
         libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip \
         vim wget xmlto xxd zlib1g-dev python3-setuptools
         